[{"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\index.js":"1","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\App.js":"2","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\pages\\Home.js":"3","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\Layout\\Navbar.js":"4","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\users\\AddUser.js":"5","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\users\\EditUser.js":"6"},{"size":218,"mtime":1608351413200,"results":"7","hashOfConfig":"8"},{"size":722,"mtime":1608442206015,"results":"9","hashOfConfig":"8"},{"size":1996,"mtime":1608442177766,"results":"10","hashOfConfig":"8"},{"size":1148,"mtime":1608442050522,"results":"11","hashOfConfig":"8"},{"size":2579,"mtime":1608377899609,"results":"12","hashOfConfig":"8"},{"size":2792,"mtime":1608377958834,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"nfna37",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\index.js",[],["29","30"],"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\App.js",[],"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\pages\\Home.js",["31"],"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\Layout\\Navbar.js",["32"],"C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\users\\AddUser.js",["33","34"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../users/AddUser.css\";\r\n\r\nconst AddUser = () => {\r\n  let history = useHistory();\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    roll: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const inputChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await Axios.post(\"http://localhost:3002/student\", user);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form\">\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Full Name\"\r\n              value={user.name}\r\n              className=\"form-control\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Roll</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"roll\"\r\n              id=\"roll\"\r\n              className=\"form-control\"\r\n              value={user.roll}\r\n              onChange={(e) => inputChange(e)}\r\n              placeholder=\"Roll Number\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={user.email}\r\n              placeholder=\"Enter email\"\r\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Mobile</label>\r\n            <input\r\n              type=\"phone\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              className=\"form-control\"\r\n              placeholder=\"Mobile\"\r\n              value={user.phone}\r\n              pattern=\"[0-9]{10}\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","C:\\Users\\lenovo\\Desktop\\Codes\\crudapp\\src\\components\\users\\EditUser.js",["35"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst EditUser = () => {\r\n  let history = useHistory();\r\n  let { id } = useParams();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    roll: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  });\r\n\r\n  const inputChange = (e) => {\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await Axios.patch(`http://localhost:3002/student/${id}`, user);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const loadUser = async () => {\r\n    const result = await Axios.get(`http://localhost:3002/student/${id}`);\r\n    setUser(result.data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form\">\r\n          <div className=\"form-group\">\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              className=\"form-control\"\r\n              placeholder=\"Full Name\"\r\n              value={user.name}\r\n              class=\"form-control\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Roll</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"roll\"\r\n              id=\"roll\"\r\n              className=\"form-control\"\r\n              value={user.roll}\r\n              onChange={(e) => inputChange(e)}\r\n              placeholder=\"Roll Number\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Email address</label>\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              value={user.email}\r\n              placeholder=\"Enter email\"\r\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Mobile</label>\r\n            <input\r\n              type=\"phone\"\r\n              name=\"phone\"\r\n              id=\"phone\"\r\n              className=\"form-control\"\r\n              placeholder=\"Mobile\"\r\n              value={user.phone}\r\n              pattern=\"[0-9]{10}\"\r\n              onChange={(e) => inputChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-danger\">\r\n            Update User\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":40,"column":21,"nodeType":"42","endLine":40,"endColumn":32},{"ruleId":"43","severity":1,"message":"44","line":8,"column":9,"nodeType":"45","endLine":8,"endColumn":46},{"ruleId":"46","severity":1,"message":"47","line":2,"column":27,"nodeType":"48","messageId":"49","endLine":2,"endColumn":36},{"ruleId":"50","severity":1,"message":"51","line":41,"column":15,"nodeType":"42","endLine":41,"endColumn":39},{"ruleId":"52","severity":1,"message":"53","line":25,"column":6,"nodeType":"54","endLine":25,"endColumn":8,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [loadUser]",{"range":"61","text":"62"},[502,504],"[loadUser]"]